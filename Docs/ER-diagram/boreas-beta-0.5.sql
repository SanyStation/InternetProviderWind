-- Generated by Oracle SQL Developer Data Modeler 3.1.3.706
--   at:        2014-04-10 01:12:59 EEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE Cables 
    ( 
     id NUMBER (7)  NOT NULL , 
     Port_id NUMBER (12)  NOT NULL , 
     Service_Instances_id NUMBER (3)  NOT NULL 
    ) 
;



ALTER TABLE Cables 
    ADD CONSTRAINT Cable_PK PRIMARY KEY ( id ) ;



CREATE TABLE Circuits 
    ( 
     id NUMBER (7)  NOT NULL , 
     Service_Instance_id NUMBER (3)  NOT NULL , 
     Port_id NUMBER (12)  NOT NULL 
    ) 
;


CREATE UNIQUE INDEX crc_indx_port_id ON Circuits 
    ( 
     Port_id ASC 
    ) 
;

ALTER TABLE Circuits 
    ADD CONSTRAINT Circuit_PK PRIMARY KEY ( id ) ;



CREATE TABLE Devices 
    ( 
     id NUMBER (8)  NOT NULL 
    ) 
;



ALTER TABLE Devices 
    ADD CONSTRAINT Device_PK PRIMARY KEY ( id ) ;



CREATE TABLE Ports 
    ( 
     id NUMBER (12)  NOT NULL , 
     Device_id NUMBER (8)  NOT NULL , 
     free CHAR (1) DEFAULT '1' 
    ) 
;


CREATE INDEX prt_inx_free ON Ports 
    ( 
     free ASC 
    ) 
;

ALTER TABLE Ports 
    ADD CONSTRAINT Ports_PK PRIMARY KEY ( id ) ;



CREATE TABLE Prices 
    ( 
     id NUMBER (5)  NOT NULL , 
     Provider_Location_id NUMBER (8)  NOT NULL , 
     Service_id NUMBER (3)  NOT NULL , 
     price NUMBER  NOT NULL 
    ) 
;


CREATE UNIQUE INDEX prc_indx_pl_s ON Prices 
    ( 
     Provider_Location_id ASC , 
     Service_id ASC 
    ) 
;

ALTER TABLE Prices 
    ADD CONSTRAINT Price_PK PRIMARY KEY ( id ) ;



CREATE TABLE Provider_Locations 
    ( 
     id NUMBER (8)  NOT NULL , 
     pos_x NUMBER  NOT NULL , 
     pos_y NUMBER  NOT NULL , 
     address VARCHAR2 (200) 
    ) 
;



ALTER TABLE Provider_Locations 
    ADD CONSTRAINT Provider_Locations_PK PRIMARY KEY ( id ) ;



CREATE TABLE Roles 
    ( 
     id NUMBER (3)  NOT NULL , 
     Name VARCHAR2 (20)  NOT NULL 
    ) 
;



ALTER TABLE Roles 
    ADD CONSTRAINT Roles_PK PRIMARY KEY ( id ) ;



CREATE TABLE Service_Instances 
    ( 
     id NUMBER (3)  NOT NULL , 
     User_id NUMBER (3)  NOT NULL , 
     Service_Order_id NUMBER (8)  NOT NULL , 
     Status VARCHAR2 (15) , 
     Services_id NUMBER (3)  NOT NULL 
    ) 
;


CREATE INDEX si_indx_user ON Service_Instances 
    ( 
     User_id ASC 
    ) 
;
CREATE UNIQUE INDEX si_indx_id ON Service_Instances 
    ( 
     id ASC 
    ) 
;

ALTER TABLE Service_Instances 
    ADD CONSTRAINT Service_Instances_PK PRIMARY KEY ( id ) ;



CREATE TABLE Service_Locations 
    ( 
     id NUMBER (8)  NOT NULL , 
     pos_x NUMBER  NOT NULL , 
     pos_y NUMBER  NOT NULL , 
     address VARCHAR2 (200) 
    ) 
;



ALTER TABLE Service_Locations 
    ADD CONSTRAINT Service_Locations_PK PRIMARY KEY ( id ) ;



CREATE TABLE Service_Orders 
    ( 
     id NUMBER (8)  NOT NULL , 
     enterDate DATE , 
     procesDate DATE , 
     completeDate DATE , 
     User_id NUMBER (3)  NOT NULL , 
     Service_id NUMBER (3)  NOT NULL , 
     Provider_Location_id NUMBER (8)  NOT NULL , 
     Service_Location_id NUMBER (8)  NOT NULL , 
     Status VARCHAR2 (15) DEFAULT 'Entering' , 
     Scenario VARCHAR2 (15)  NOT NULL 
    ) 
;


CREATE INDEX so_indx_user ON Service_Orders 
    ( 
     User_id ASC 
    ) 
;
CREATE INDEX so_indx_pl ON Service_Orders 
    ( 
     Provider_Location_id ASC 
    ) 
;
CREATE INDEX so_indx_status ON Service_Orders 
    ( 
     Status ASC 
    ) 
;
CREATE UNIQUE INDEX so_indx_id ON Service_Orders 
    ( 
     id ASC 
    ) 
;

ALTER TABLE Service_Orders 
    ADD CONSTRAINT Service_Order_PK PRIMARY KEY ( id ) ;



CREATE TABLE Services 
    ( 
     id NUMBER (3)  NOT NULL , 
     Name VARCHAR2 (50)  NOT NULL , 
     Description VARCHAR2 (300) 
    ) 
;



ALTER TABLE Services 
    ADD CONSTRAINT Service_PK PRIMARY KEY ( id ) ;



CREATE TABLE Tasks 
    ( 
     id NUMBER (12)  NOT NULL , 
     User_id NUMBER (3)  NOT NULL , 
     type VARCHAR2 (15) , 
     Status VARCHAR2 (15) , 
     Role_id NUMBER (3)  NOT NULL , 
     Service_Orders_id NUMBER (8)  NOT NULL 
    ) 
;



ALTER TABLE Tasks 
    ADD CONSTRAINT Task_PK PRIMARY KEY ( id ) ;



CREATE TABLE Users 
    ( 
     id NUMBER (3)  NOT NULL , 
     Name VARCHAR2 (30) , 
     email VARCHAR2 (20) , 
     password VARCHAR2 (20)  NOT NULL , 
     blocked CHAR (1) DEFAULT '0' , 
     Role_id NUMBER (3)  NOT NULL 
    ) 
;


CREATE UNIQUE INDEX usr_indx_email ON Users 
    ( 
     email ASC 
    ) 
;

ALTER TABLE Users 
    ADD CONSTRAINT User_PK PRIMARY KEY ( id ) ;


ALTER TABLE Users 
    ADD CONSTRAINT usr_unq_email UNIQUE ( email ) ;




ALTER TABLE Cables 
    ADD CONSTRAINT Cable_Ports_FK FOREIGN KEY 
    ( 
     Port_id
    ) 
    REFERENCES Ports 
    ( 
     id
    ) 
;


ALTER TABLE Cables 
    ADD CONSTRAINT Cables_Service_Instances_FK FOREIGN KEY 
    ( 
     Service_Instances_id
    ) 
    REFERENCES Service_Instances 
    ( 
     id
    ) 
;


ALTER TABLE Circuits 
    ADD CONSTRAINT Circuit_Ports_FK FOREIGN KEY 
    ( 
     Port_id
    ) 
    REFERENCES Ports 
    ( 
     id
    ) 
;


ALTER TABLE Circuits 
    ADD CONSTRAINT Circuit_Service_Instance_FK FOREIGN KEY 
    ( 
     Service_Instance_id
    ) 
    REFERENCES Service_Instances 
    ( 
     id
    ) 
;


ALTER TABLE Ports 
    ADD CONSTRAINT Ports_Device_FK FOREIGN KEY 
    ( 
     Device_id
    ) 
    REFERENCES Devices 
    ( 
     id
    ) 
;


ALTER TABLE Prices 
    ADD CONSTRAINT Price_Provider_Location_FK FOREIGN KEY 
    ( 
     Provider_Location_id
    ) 
    REFERENCES Provider_Locations 
    ( 
     id
    ) 
;


ALTER TABLE Prices 
    ADD CONSTRAINT Price_Service_FK FOREIGN KEY 
    ( 
     Service_id
    ) 
    REFERENCES Services 
    ( 
     id
    ) 
;


ALTER TABLE Service_Instances 
    ADD CONSTRAINT Service_Inst_Service_Ord_FK FOREIGN KEY 
    ( 
     Service_Order_id
    ) 
    REFERENCES Service_Orders 
    ( 
     id
    ) 
;


ALTER TABLE Service_Instances 
    ADD CONSTRAINT Service_Instances_Services_FK FOREIGN KEY 
    ( 
     Services_id
    ) 
    REFERENCES Services 
    ( 
     id
    ) 
;


ALTER TABLE Service_Instances 
    ADD CONSTRAINT Service_Instances_Users_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES Users 
    ( 
     id
    ) 
;


ALTER TABLE Service_Orders 
    ADD CONSTRAINT Service_Order_ProvLoc_FK FOREIGN KEY 
    ( 
     Provider_Location_id
    ) 
    REFERENCES Provider_Locations 
    ( 
     id
    ) 
;


ALTER TABLE Service_Orders 
    ADD CONSTRAINT Service_Order_ServLoc_FK FOREIGN KEY 
    ( 
     Service_Location_id
    ) 
    REFERENCES Service_Locations 
    ( 
     id
    ) 
;


ALTER TABLE Service_Orders 
    ADD CONSTRAINT Service_Order_Service_FK FOREIGN KEY 
    ( 
     Service_id
    ) 
    REFERENCES Services 
    ( 
     id
    ) 
;


ALTER TABLE Service_Orders 
    ADD CONSTRAINT Service_Order_User_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES Users 
    ( 
     id
    ) 
;


ALTER TABLE Tasks 
    ADD CONSTRAINT Tasks_Roles_FK FOREIGN KEY 
    ( 
     Role_id
    ) 
    REFERENCES Roles 
    ( 
     id
    ) 
;


ALTER TABLE Tasks 
    ADD CONSTRAINT Tasks_Service_Orders_FK FOREIGN KEY 
    ( 
     Service_Orders_id
    ) 
    REFERENCES Service_Orders 
    ( 
     id
    ) 
;


ALTER TABLE Tasks 
    ADD CONSTRAINT Tasks_Users_FK FOREIGN KEY 
    ( 
     User_id
    ) 
    REFERENCES Users 
    ( 
     id
    ) 
;


ALTER TABLE Users 
    ADD CONSTRAINT User_Roles_FK FOREIGN KEY 
    ( 
     Role_id
    ) 
    REFERENCES Roles 
    ( 
     id
    ) 
;

CREATE OR REPLACE VIEW device_profit AS
SELECT SUM(prc.price) profit,
  p.Device_id device_id
FROM Ports p
INNER JOIN Circuits c
ON c.Port_id = p.id
INNER JOIN Service_Instances si
ON c.Service_Instance_id = si.id
INNER JOIN Service_Orders so
ON si.Service_Order_id = so.id
INNER JOIN Prices prc
ON prc.Provider_Location_id = so.Provider_Location_id
AND prc.Service_id          = so.Service_id
WHERE p.free                = 0
GROUP BY p.Device_id ;



CREATE SEQUENCE cbl_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER cbl_id_TRG 
BEFORE INSERT ON Cables 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT cbl_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE crt_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER crt_id_TRG 
BEFORE INSERT ON Circuits 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT crt_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE prt_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER prt_id_TRG 
BEFORE INSERT ON Ports 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT prt_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE prc_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER prc_id_TRG 
BEFORE INSERT ON Prices 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT prc_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE prloc_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER prloc_id_TRG 
BEFORE INSERT ON Provider_Locations 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT prloc_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE rls_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER rls_id_TRG 
BEFORE INSERT ON Roles 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT rls_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE SI_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER SI_id_TRG 
BEFORE INSERT ON Service_Instances 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT SI_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE srvloc_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER srvloc_id_TRG 
BEFORE INSERT ON Service_Locations 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT srvloc_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE SO_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER SO_id_TRG 
BEFORE INSERT ON Service_Orders 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT SO_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE srv_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER srv_id_TRG 
BEFORE INSERT ON Services 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT srv_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE tsk_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER tsk_id_TRG 
BEFORE INSERT ON Tasks 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT tsk_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/

CREATE SEQUENCE usr_id_SEQ 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER usr_id_TRG 
BEFORE INSERT ON Users 
FOR EACH ROW 
WHEN (NEW.id IS NULL) 
BEGIN 
    SELECT usr_id_SEQ.NEXTVAL INTO :NEW.id FROM DUAL; 
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                            10
-- ALTER TABLE                             32
-- CREATE VIEW                              1
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          12
-- ALTER TRIGGER                            0
-- CREATE STRUCTURED TYPE                   0
-- CREATE COLLECTION TYPE                   0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         12
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
